use super::ClassId;
use super::Id;
use super::IdPrefix;
use super::Iri;
use super::Line;
use super::NaiveDate;
use super::NamespaceId;
use super::PropertyValue;
use super::QuotedString;
use super::RelationId;
use super::SubsetId;
use super::UnquotedString;
use super::SynonymScope;
use super::SynonymTypeId;

/// The header frame, containing metadata about an OBO document.
pub struct HeaderFrame {
    clauses: Vec<HeaderClause>,
}

/// An clause appearing in a header frame.
pub enum HeaderClause {
    FormatVersion(UnquotedString),
    DateTag(NaiveDate),
    SavedBy(UnquotedString),
    AutoGeneratedBy(UnquotedString),
    ImportTag(Import),
    Subsetdef(SubsetId, QuotedString),
    SynonymTypeDef(SynonymTypeId, QuotedString, Option<SynonymScope>),
    DefaultNamespaceTag(NamespaceId),
    Idspace(IdPrefix, Iri, Option<QuotedString>),
    TreatXrefsAsEquivalent(IdPrefix),
    TreatXrefsAsGenusDifferentia(IdPrefix, RelationId, ClassId),
    TreatXrefsAsReverseGenusDifferentia(IdPrefix, RelationId, ClassId),
    TreatXrefsAsRelationship(IdPrefix, RelationId),
    TreatXrefsAsIsA(IdPrefix),
    TreatXrefsAsHasSubclass(IdPrefix),
    PropertyValue(Line<PropertyValue>),
    Remark(UnquotedString),
    Ontology(UnquotedString),
    OwlAxioms(UnquotedString),
    Unreserved(UnquotedString, UnquotedString),
}

pub enum Import {
    Iri(Iri),
    Abbreviated(Id), // QUESTION(@althonos): UnprefixedID ?
}
